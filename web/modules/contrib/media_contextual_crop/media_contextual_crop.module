<?php

/**
 * @file
 * Contains media_contextual_crop implemented hooks.
 */

declare(strict_types=1);

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\crop\Entity\Crop;

// For all image_formatter alteration & actions.
require_once __DIR__ . '/media_contextual_crop.alter_image_formatter.inc';
require_once __DIR__ . '/media_contextual_crop.alter_responsive.common.inc';

/**
 * Implements hook_help().
 */
function media_contextual_crop_help($route_name, RouteMatchInterface $route_match) {
  $advanced_help = \Drupal::moduleHandler()->moduleExists('advanced_help');
  $output = '';
  switch ($route_name) {
    // Main module help for the media_contextual_crop_field_formatter module.
    case 'help.page.media_contextual_crop':
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module provides API elements for media_contextual_crop collection.') . '</p>';
      $output .= '';
      if ($advanced_help) {
        $output .= '<p>' . t('For more information, please see <a href="/admin/help/ah/media_contextual_crop">advanced_help</a>  page.') . '</p>';
      }
      else {
        $output .= '<p>' . t('For more information, please install <a href="https://www.drupal.org/project/advanced_help">advanced_help</a>  module.') . '</p>';
      }
  }
  return $output;
}

/**
 * Implements hook_theme().
 */
function media_contextual_crop_theme() {
  return [
    // Theme functions in image.module.
    'image_contextual' => [
      // HTML 4 and XHTML 1.0 always require an alt attribute. The HTML 5 draft
      // allows the alt attribute to be omitted in some cases. Therefore,
      // default the alt attribute to an empty string, but allow code using
      // '#theme' => 'image_style' to pass explicit NULL for it to be omitted.
      // Usually, neither omission nor an empty string satisfies accessibility
      // requirements, so it is strongly encouraged for code using '#theme' =>
      // 'image_style' to pass a meaningful value for the alt variable.
      // - http://www.w3.org/TR/REC-html40/struct/objects.html#h-13.8
      // - http://www.w3.org/TR/xhtml1/dtds.html
      // - http://dev.w3.org/html5/spec/Overview.html#alt
      // The title attribute is optional in all cases, so it is omitted by
      // default.
      'variables' => [
        'style_name' => NULL,
        'uri' => NULL,
        'width' => NULL,
        'height' => NULL,
        'alt' => '',
        'title' => NULL,
        'attributes' => [],
      ],
    ],

    'image_contextual_formatter' => [
      'variables' => ['item' => NULL, 'item_attributes' => NULL, 'url' => NULL, 'image_style' => NULL],
    ],
  ];
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 *
 * Deletes orphaned contexts when a Crop is deleted.
 */
function media_contextual_crop_crop_delete(Crop $crop) {
  \Drupal::service('media_contextual_crop.service')->deleteDerivative($crop);
}

/**
 * Implements hook_image_style_flush().
 */
function media_contextual_crop_image_style_flush($style, $path = NULL) {
  \Drupal::service('media_contextual_crop.service')->flushStyle($style, $path);
}

/**
 * Implements hook_preprocess_responsive_image_formatter().
 *
 * @Desc : intercept responsive image processor
 */
function media_contextual_crop_preprocess_responsive_image_formatter(&$variables) {
  _media_contextual_crop_responsive_formatters($variables, 'responsive_image');

}

/**
 * Implements hook_preprocess_responsive_image().
 *
 * @Desc : intercept responsive image processor
 */
function media_contextual_crop_preprocess_responsive_image(&$variables) {
  _media_contextual_crop_preprocess_responsive_item($variables);
}

/**
 * Implements hook_preprocess_cqri_formatter().
 *
 * @Desc : intercept responsive image for CQRI
 */
function media_contextual_crop_preprocess_cqri_formatter(&$variables) {
  _media_contextual_crop_responsive_formatters($variables, 'cqri_item');
}

/**
 * Implements hook_preprocess_cqri_item().
 *
 * @Desc : intercept responsive image processor
 */
function media_contextual_crop_preprocess_cqri_item(&$variables) {
  _media_contextual_crop_preprocess_responsive_item($variables);
}
